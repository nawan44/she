{"ast":null,"code":"var _jsxFileName = \"/home/nawan44/Documents/Delameta/she/src/Page/Artikel/index.jsx\",\n    _s = $RefreshSig$();\n\nimport Axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Card, CardActionArea, CardActions, CardContent, CardMedia, Button } from \"@material-ui/core\";\nimport Image1 from \"../../Assets/Image/img1.jpg\";\nimport logo from \"../../Assets/sidebar/delameta.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ImgMediaCard() {\n  _s();\n\n  const [dataPeraturan, setDataPeraturan] = useState([]); // console.log(dataPeraturan);\n\n  useEffect(() => {\n    Axios.get(\"https://jsonplaceholder.typicode.com/users\").then(res => {\n      setDataPeraturan(res.data);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: dataPeraturan.map(item => /*#__PURE__*/_jsxDEV(Card, {\n      className: \"rootDataPeraturan\",\n      children: [/*#__PURE__*/_jsxDEV(CardActionArea, {\n        className: \"cardArea\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"title\",\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          className: \"cardContent\",\n          children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n            component: \"img\",\n            alt: \"Contemplative Reptile\",\n            height: \"140\",\n            image: Image1,\n            title: \"Contemplative Reptile\",\n            className: \"cardMedia\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            component: \"p\",\n            className: \"cardDesc\",\n            children: [item.address.street, \" \" + item.address.suite + \" \", item.address.city + \" \", item.address.zipcode + \" \", item.address.geo.lat + \" \", item.address.geo.lng + \" \", item.company.name + \" \", item.company.catchPhrase + \" \", item.company.bs + \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          color: \"primary\",\n          children: \"Share\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          color: \"primary\",\n          children: \"Learn More\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ImgMediaCard, \"sLneoeIvDnHtMsFUfEpSl0AcJJ4=\");\n\n_c = ImgMediaCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImgMediaCard\");","map":{"version":3,"sources":["/home/nawan44/Documents/Delameta/she/src/Page/Artikel/index.jsx"],"names":["Axios","React","useEffect","useState","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Image1","logo","ImgMediaCard","dataPeraturan","setDataPeraturan","get","then","res","data","map","item","name","address","street","suite","city","zipcode","geo","lat","lng","company","catchPhrase","bs"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SACEC,IADF,EAEEC,cAFF,EAGEC,WAHF,EAIEC,WAJF,EAKEC,SALF,EAMEC,MANF,QAOO,mBAPP;AAQA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,IAAP,MAAiB,mCAAjB;;AAEA,eAAe,SAASC,YAAT,GAAwB;AAAA;;AACrC,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,EAAD,CAAlD,CADqC,CAErC;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdF,IAAAA,KAAK,CAACe,GAAN,CAAU,4CAAV,EAAwDC,IAAxD,CAA8DC,GAAD,IAAS;AACpEH,MAAAA,gBAAgB,CAACG,GAAG,CAACC,IAAL,CAAhB;AACD,KAFD;AAGD,GAJQ,CAAT;AAKA,sBACE;AAAA,cACGL,aAAa,CAACM,GAAd,CAAmBC,IAAD,iBACjB,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,mBAAhB;AAAA,8BACE,QAAC,cAAD;AAAgB,QAAA,SAAS,EAAC,UAA1B;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,OAAd;AAAA,oBAAuBA,IAAI,CAACC;AAA5B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,WAAD;AAAa,UAAA,SAAS,EAAC,aAAvB;AAAA,kCACE,QAAC,SAAD;AACE,YAAA,SAAS,EAAC,KADZ;AAEE,YAAA,GAAG,EAAC,uBAFN;AAGE,YAAA,MAAM,EAAC,KAHT;AAIE,YAAA,KAAK,EAAEX,MAJT;AAKE,YAAA,KAAK,EAAC,uBALR;AAME,YAAA,SAAS,EAAC;AANZ;AAAA;AAAA;AAAA;AAAA,kBADF,eASE;AACE,YAAA,OAAO,EAAC,OADV;AAEE,YAAA,KAAK,EAAC,eAFR;AAGE,YAAA,SAAS,EAAC,GAHZ;AAIE,YAAA,SAAS,EAAC,UAJZ;AAAA,uBAMGU,IAAI,CAACE,OAAL,CAAaC,MANhB,EAOG,MAAMH,IAAI,CAACE,OAAL,CAAaE,KAAnB,GAA2B,GAP9B,EAQGJ,IAAI,CAACE,OAAL,CAAaG,IAAb,GAAoB,GARvB,EASGL,IAAI,CAACE,OAAL,CAAaI,OAAb,GAAuB,GAT1B,EAUGN,IAAI,CAACE,OAAL,CAAaK,GAAb,CAAiBC,GAAjB,GAAuB,GAV1B,EAWGR,IAAI,CAACE,OAAL,CAAaK,GAAb,CAAiBE,GAAjB,GAAuB,GAX1B,EAYGT,IAAI,CAACU,OAAL,CAAaT,IAAb,GAAoB,GAZvB,EAaGD,IAAI,CAACU,OAAL,CAAaC,WAAb,GAA2B,GAb9B,EAcGX,IAAI,CAACU,OAAL,CAAaE,EAAb,GAAkB,GAdrB;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eA8BE,QAAC,WAAD;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,OAAb;AAAqB,UAAA,KAAK,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,OAAb;AAAqB,UAAA,KAAK,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cA9BF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AA6CD;;GArDuBpB,Y;;KAAAA,Y","sourcesContent":["import Axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  Card,\n  CardActionArea,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Button,\n} from \"@material-ui/core\";\nimport Image1 from \"../../Assets/Image/img1.jpg\";\nimport logo from \"../../Assets/sidebar/delameta.png\"\n\nexport default function ImgMediaCard() {\n  const [dataPeraturan, setDataPeraturan] = useState([]);\n  // console.log(dataPeraturan);\n  useEffect(() => {\n    Axios.get(\"https://jsonplaceholder.typicode.com/users\").then((res) => {\n      setDataPeraturan(res.data);\n    });\n  });\n  return (\n    <div>\n      {dataPeraturan.map((item) => (\n        <Card className=\"rootDataPeraturan\">\n          <CardActionArea className=\"cardArea\">\n            <h1 className=\"title\">{item.name}</h1>\n            <CardContent className=\"cardContent\">\n              <CardMedia\n                component=\"img\"\n                alt=\"Contemplative Reptile\"\n                height=\"140\"\n                image={Image1}\n                title=\"Contemplative Reptile\"\n                className=\"cardMedia\"\n              />\n              <span\n                variant=\"body2\"\n                color=\"textSecondary\"\n                component=\"p\"\n                className=\"cardDesc\"\n              >\n                {item.address.street}\n                {\" \" + item.address.suite + \" \"}\n                {item.address.city + \" \"}\n                {item.address.zipcode + \" \"}\n                {item.address.geo.lat + \" \"}\n                {item.address.geo.lng + \" \"}\n                {item.company.name + \" \"}\n                {item.company.catchPhrase + \" \"}\n                {item.company.bs + \" \"}\n              </span>\n            </CardContent>\n          </CardActionArea>\n          <CardActions>\n            <Button size=\"small\" color=\"primary\">\n              Share\n            </Button>\n            <Button size=\"small\" color=\"primary\">\n              Learn More\n            </Button>\n          </CardActions>\n        </Card>\n      ))}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}